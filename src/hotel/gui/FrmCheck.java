/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.gui;

import hotel.bo.ClienteBo;
import hotel.bo.HabitacionBo;
import hotel.bo.ReservaBo;
import hotel.entities.Cliente;
import hotel.entities.Habitacion;
import hotel.entities.MiError;
import hotel.entities.Reserva;
import hotel.entities.Usuario;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class FrmCheck extends javax.swing.JFrame {

    private Usuario u;
    private ArrayList<Reserva> reservasIn;
    private ArrayList<Reserva> reservasOut;
    private DefaultTableModel modelo;
    private SimpleDateFormat formateador;
    private ArrayList<Habitacion> habitaciones;
    private ArrayList<Cliente> clientes;
    private ArrayList<Integer> ids;

    /**
     * Creates new form FrmCheck
     */
    public FrmCheck() {
        initComponents();
        setLocationRelativeTo(null);
        setButtons();
        formateador = new SimpleDateFormat("dd/MM/yyyy");
        u = new Usuario();
        modelo = (DefaultTableModel) jTable1.getModel();
        cargarListas();
        cargarTablaCheckIn();
        btnOut.setVisible(false);
    }

    public FrmCheck(Usuario u1) {
        initComponents();
        setLocationRelativeTo(null);
        setButtons();
        formateador = new SimpleDateFormat("dd/MM/yyyy");
        u = u1;
        modelo = (DefaultTableModel) jTable1.getModel();
        cargarListas();
        cargarTablaCheckIn();
        btnOut.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnIn = new javax.swing.JButton();
        btnOut = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        rbtnCheckIn = new javax.swing.JRadioButton();
        rbtnCheckOut = new javax.swing.JRadioButton();
        btnAtras = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre", "Check In", "Check Out"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnIn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnIn.setText("Check In");
        btnIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });

        btnOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnOut.setText("Check Out");
        btnOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutActionPerformed(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        buttonGroup1.add(rbtnCheckIn);
        rbtnCheckIn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtnCheckIn.setSelected(true);
        rbtnCheckIn.setText("Check In");
        rbtnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCheckInActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnCheckOut);
        rbtnCheckOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtnCheckOut.setText("Check Out");
        rbtnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCheckOutActionPerformed(evt);
            }
        });

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/atras.png"))); // NOI18N
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salir.png"))); // NOI18N
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtnCheckIn)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnIn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnOut))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rbtnCheckOut))))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(rbtnCheckIn)
                .addGap(10, 10, 10)
                .addComponent(rbtnCheckOut)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIn)
                    .addComponent(btnOut))
                .addGap(28, 28, 28)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed
        if (jTable1.getSelectedRow() >= 0) {
            try {
                int row = jTable1.getSelectedRow();
                Date d = new Date();
                String date = formateador.format(d);
                String checkIn = modelo.getValueAt(row, 2).toString();
                if (date.equals(checkIn)) {
                    int id = ids.get(row);
                    HabitacionBo hbo = new HabitacionBo();
                    ReservaBo rbo = new ReservaBo();
                    for (Reserva r : reservasIn) {
                        if (r.getHabitacion() == id) {
                            if (hbo.checkIn(id)) {
                                if (rbo.modificar(r.getId())) {
                                    lblError.setText("Check In realizado.");
                                    modelo.removeRow(row);
                                    return;
                                }
                            }
                        }
                    }
                }
            } catch (MiError ex) {
                lblError.setText(ex.getMessage());
            } catch (Exception ex) {
                lblError.setText("Problemas al hacer check in.");
            }
        }
    }//GEN-LAST:event_btnInActionPerformed

    private void btnOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutActionPerformed
        if (jTable1.getSelectedRow() >= 0) {
            try {
                int row = jTable1.getSelectedRow();
                Date d = new Date();
                String date = formateador.format(d);
                String checkOut = modelo.getValueAt(row, 3).toString();
                if (date.equals(checkOut)) {
                    int id = ids.get(row);
                    HabitacionBo hbo = new HabitacionBo();
                    ReservaBo rbo = new ReservaBo();
                    for (Reserva r : reservasIn) {
                        if (r.getHabitacion() == id) {
                            if (hbo.checkOut(id)) {
                                lblError.setText("Check Out realizado.");
                                modelo.removeRow(row);
                                ids.remove(row);
                                return;
                            }
                        }
                    }
                }
            } catch (MiError ex) {
                lblError.setText(ex.getMessage());
            } catch (Exception ex) {
                lblError.setText("Problemas al hacer check out.");
            }
        }
    }//GEN-LAST:event_btnOutActionPerformed

    private void rbtnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCheckInActionPerformed
        if (rbtnCheckIn.isSelected()) {
            cargarTablaCheckIn();
            btnOut.setVisible(false);
            btnIn.setVisible(true);
        }
    }//GEN-LAST:event_rbtnCheckInActionPerformed

    private void rbtnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCheckOutActionPerformed
        if (rbtnCheckOut.isSelected()) {
            cargarTablaCheckOut();
            btnIn.setVisible(false);
            btnOut.setVisible(true);
        }
    }//GEN-LAST:event_rbtnCheckOutActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        FrmPrincipal frm = new FrmPrincipal(u);
        frm.setVisible(true);
        frm.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed
    /**
     * Carga las listas
     */
    public void cargarListas() {
        Date d = new Date();
        ReservaBo rbo = new ReservaBo();
        reservasIn = rbo.cargarTodo();
        reservasOut = rbo.cargarOut(d);
        HabitacionBo hbo = new HabitacionBo();
        habitaciones = hbo.cargarHabitaciones();
        ClienteBo cbo = new ClienteBo();
        clientes = cbo.cargarTodo();
    }

    /**
     * Carga la tabla con las reservas
     */
    public void cargarTablaCheckIn() {
        ids = new ArrayList<>();
        Date date = new Date();
        String d = formateador.format(date);
        for (Reserva r : reservasIn) {
            String checkIn = formateador.format(r.getFechaInicio());
            String checkOut = formateador.format(r.getFechaFinal());
            if (d.equals(checkIn)) {
                for (Cliente c : clientes) {
                    if (r.getCliente() == c.getId()) {
                        modelo.addRow(new Object[]{
                            c.getCedula(), c.getNombre(), checkIn, checkOut
                        });
                        ids.add(r.getHabitacion());
                    }
                }
            }
        }
    }

    /**
     * Carga la tabla con las reservas
     */
    public void cargarTablaCheckOut() {
        ids = new ArrayList<>();
        Date date = new Date();
        String d = formateador.format(date);
        for (Reserva r : reservasOut) {
            String checkIn = formateador.format(r.getFechaInicio());
            String checkOut = formateador.format(r.getFechaFinal());
            if (d.equals(checkOut)) {
                for (Cliente c : clientes) {
                    if (r.getCliente() == c.getId()) {
                        modelo.addRow(new Object[]{
                            c.getCedula(), c.getNombre(), checkIn, checkOut
                        });
                        ids.add(r.getHabitacion());
                    }
                }
            }
        }
    }

    /**
     * Elimina el fondo de los botones
     */
    public void setButtons() {
        btnExit.setContentAreaFilled(false);
        btnExit.setBorder(null);
        btnAtras.setContentAreaFilled(false);
        btnAtras.setBorder(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCheck().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnIn;
    private javax.swing.JButton btnOut;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblError;
    private javax.swing.JRadioButton rbtnCheckIn;
    private javax.swing.JRadioButton rbtnCheckOut;
    // End of variables declaration//GEN-END:variables
}
